'use strict';exports.__esModule = true;var _assign = require('babel-runtime/core-js/object/assign');var _assign2 = _interopRequireDefault(_assign);var _regenerator = require('babel-runtime/regenerator');var _regenerator2 = _interopRequireDefault(_regenerator);var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);var _koaRouter = require('koa-router');var _koaRouter2 = _interopRequireDefault(_koaRouter);
var _koaBodyparser = require('koa-bodyparser');var _koaBodyparser2 = _interopRequireDefault(_koaBodyparser);
var _schemas = require('../models/schemas');
var _objectId = require('../utils/objectId');var _objectId2 = _interopRequireDefault(_objectId);
var _exception = require('../middlewares/exception');var _exception2 = _interopRequireDefault(_exception);
var _graphql = require('../graphql');function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

var router = new _koaRouter2.default();

router.use(_exception2.default);

router.get('/schemas', function () {var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(ctx) {var data;return _regenerator2.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:_context.next = 2;return (
              (0, _schemas.getAll)(ctx.db()));case 2:data = _context.sent;
            ctx.Render.success(data);case 4:case 'end':return _context.stop();}}}, _callee, undefined);}));return function (_x) {return _ref.apply(this, arguments);};}());


router.post('/exist', (0, _koaBodyparser2.default)(), function () {var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(ctx) {var query, data;return _regenerator2.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:
            query = ctx.request.body;
            if (query._id) query._id = { $ne: (0, _objectId2.default)(query._id) };else
            delete query._id;_context2.next = 4;return (
              (0, _schemas.getOne)(ctx.db(), query));case 4:data = _context2.sent;

            if (data) {
              ctx.Render.fail('schema existed');
            } else {
              ctx.Render.success(true);
            }case 6:case 'end':return _context2.stop();}}}, _callee2, undefined);}));return function (_x2) {return _ref2.apply(this, arguments);};}());


router.get('/schema/:id', function () {var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(ctx) {var data;return _regenerator2.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:_context3.next = 2;return (
              (0, _schemas.getOne)(ctx.db(), { _id: (0, _objectId2.default)(ctx.params.id) }));case 2:data = _context3.sent;
            if (data) {
              ctx.Render.success(data);
            } else {
              ctx.Render.notFound();
            }case 4:case 'end':return _context3.stop();}}}, _callee3, undefined);}));return function (_x3) {return _ref3.apply(this, arguments);};}());


router.post('/schema/fields', (0, _koaBodyparser2.default)(), function () {var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4(ctx) {var _ctx$request$body, _id, fields, schema, data;return _regenerator2.default.wrap(function _callee4$(_context4) {while (1) {switch (_context4.prev = _context4.next) {case 0:_ctx$request$body =
            ctx.request.body, _id = _ctx$request$body._id, fields = _ctx$request$body.fields;_context4.next = 3;return (
              (0, _schemas.getOne)(ctx.db(), { _id: (0, _objectId2.default)(_id) }));case 3:schema = _context4.sent;
            schema.fields = fields;
            schema.updateAt = Date.now();_context4.next = 8;return (
              (0, _schemas.updateSchema)(ctx.db(), schema));case 8:data = _context4.sent;

            (0, _graphql.clearType)();

            ctx.Render.success(data[0]);case 11:case 'end':return _context4.stop();}}}, _callee4, undefined);}));return function (_x4) {return _ref4.apply(this, arguments);};}());


router.post('/schema', (0, _koaBodyparser2.default)(), function () {var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5(ctx) {var data, method, old;return _regenerator2.default.wrap(function _callee5$(_context5) {while (1) {switch (_context5.prev = _context5.next) {case 0:
            data = ctx.request.body;
            method = data._id ? _schemas.updateSchema : _schemas.insertSchema;if (

            data._id) {_context5.next = 7;break;}
            data.createAt = Date.now();
            data.fields = [];_context5.next = 11;break;case 7:_context5.next = 9;return (

              (0, _schemas.getOne)(ctx.db(), { _id: (0, _objectId2.default)(data._id) }));case 9:old = _context5.sent;
            data = (0, _assign2.default)({}, old, data);case 11:

            data.updateAt = Date.now();_context5.next = 14;return (
              method(ctx.db(), data));case 14:data = _context5.sent;

            (0, _graphql.clearType)();

            ctx.Render.success(data[0]);case 17:case 'end':return _context5.stop();}}}, _callee5, undefined);}));return function (_x5) {return _ref5.apply(this, arguments);};}());


router.del('/schema', (0, _koaBodyparser2.default)(), function () {var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6(ctx) {var data, count;return _regenerator2.default.wrap(function _callee6$(_context6) {while (1) {switch (_context6.prev = _context6.next) {case 0:
            data = ctx.request.body;_context6.next = 3;return (
              (0, _schemas.removeSchema)(ctx.db(), data._id));case 3:count = _context6.sent;
            ctx.Render.success(count);case 5:case 'end':return _context6.stop();}}}, _callee6, undefined);}));return function (_x6) {return _ref6.apply(this, arguments);};}());exports.default =


router;
//# sourceMappingURL=schemas.js.map