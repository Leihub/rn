'use strict';exports.__esModule = true;var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);var _extends2 = require('babel-runtime/helpers/extends');var _extends3 = _interopRequireDefault(_extends2);var _promise = require('babel-runtime/core-js/promise');var _promise2 = _interopRequireDefault(_promise);exports.





getAll = getAll;exports.





insertSchema = insertSchema;exports.










updateSchema = updateSchema;exports.










getOne = getOne;exports.





removeSchema = removeSchema;var _model = require('../utils/model');var _objectId = require('../utils/objectId');var _objectId2 = _interopRequireDefault(_objectId);var _config = require('../config');var _config2 = _interopRequireDefault(_config);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var SCHEMA_NAME = 'schemas';function getAll(db) {return new _promise2.default(function () {db.collection(SCHEMA_NAME).find({}).sort({ _id: -1 }).toArray(_model.callback.apply(undefined, arguments));});}function insertSchema(db, entity) {return new _promise2.default(function (resolve, reject) {db.collection(SCHEMA_NAME).insert((0, _extends3.default)({}, entity, { _id: (0, _objectId2.default)() }), function (err, result) {if (err) reject(err);if (_config2.default.engine === 'tingodb') resolve(result);resolve(result.ops);});});}function updateSchema(db, model) {var _id = model._id,sets = (0, _objectWithoutProperties3.default)(model, ['_id']);return new _promise2.default(function (resolve, reject) {db.collection(SCHEMA_NAME).update({ _id: (0, _objectId2.default)(_id) }, { $set: sets }, function (err) {if (err) reject(err);else resolve([model]);});});}function getOne(db, query) {return new _promise2.default(function () {db.collection(SCHEMA_NAME).findOne(query, _model.callback.apply(undefined, arguments));});}function removeSchema(db, id) {
  return new _promise2.default(function (resolve, reject) {
    db.collection(SCHEMA_NAME).remove({ _id: (0, _objectId2.default)(id) }, function (err, result) {
      if (err) reject(err);
      if (_config2.default.engine === 'tingodb') resolve(result);else
      resolve(result.result.ok);
    });
  });
}
//# sourceMappingURL=schemas.js.map