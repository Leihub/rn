'use strict';exports.__esModule = true;var _regenerator = require('babel-runtime/regenerator');var _regenerator2 = _interopRequireDefault(_regenerator);var _assign = require('babel-runtime/core-js/object/assign');var _assign2 = _interopRequireDefault(_assign);var _promise = require('babel-runtime/core-js/promise');var _promise2 = _interopRequireDefault(_promise);var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);var bindRouter = function () {var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(























  function _callee3() {var _this = this;return _regenerator2.default.wrap(function _callee3$(_context3) {while (1) {switch (_context3.prev = _context3.next) {case 0:return _context3.abrupt('return',
            new _promise2.default(function () {var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(resolve, reject) {var db;return _regenerator2.default.wrap(function _callee2$(_context2) {while (1) {switch (_context2.prev = _context2.next) {case 0:_context2.next = 2;return (
                          getDb());case 2:db = _context2.sent;
                        db.collection('api').find({ status: 1 }).sort({ weight: -1 }).
                        toArray(function (err, routes) {
                          if (err) reject(err);

                          if (!routes) {
                            reject(new Error('routes not found.'));
                            return;
                          }

                          routes.forEach(function (r) {
                            router[r.method](r.route, (0, _koaBodyparser2.default)(), function () {var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(ctx) {var args, query, variables, schemas, data, errors;return _regenerator2.default.wrap(function _callee$(_context) {while (1) {switch (_context.prev = _context.next) {case 0:
                                        args = (0, _assign2.default)({}, ctx.query, ctx.params);_context.prev = 1;if (!(


                                        r.apiType === 'static')) {_context.next = 6;break;}
                                        ctx.body = typeof r.data === 'string' ? JSON.parse(r.data) : r.data;_context.next = 16;break;case 6:

                                        query = _swig2.default.render(r.query, { locals: args });
                                        variables = ctx.request.method === 'GET' ? args : ctx.request.body;_context.next = 10;return (
                                          (0, _schemas.getAll)(ctx.db()));case 10:schemas = _context.sent;_context.next = 13;return (
                                          (0, _graphql.graphql)((0, _graphql3.default)(ctx.db('data'), schemas), query, null, null, variables));case 13:data = _context.sent;

                                        if (handleResult) data = handleResult(data);

                                        ctx.body = data;case 16:_context.next = 23;break;case 18:_context.prev = 18;_context.t0 = _context['catch'](1);


                                        errors = {
                                          errors: {
                                            message: _context.t0.message } };


                                        if (handleResult) errors = handleResult(errors);

                                        ctx.body = errors;case 23:case 'end':return _context.stop();}}}, _callee, _this, [[1, 18]]);}));return function (_x3) {return _ref3.apply(this, arguments);};}());


                          });

                          resolve();
                          presetRoute(router);
                        });case 4:case 'end':return _context2.stop();}}}, _callee2, _this);}));return function (_x, _x2) {return _ref2.apply(this, arguments);};}()));case 1:case 'end':return _context3.stop();}}}, _callee3, this);}));return function bindRouter() {return _ref.apply(this, arguments);};}();var start = function () {var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(



  function _callee6(_ref5) {var _this2 = this;var _ref5$port = _ref5.port,port = _ref5$port === undefined ? 5002 : _ref5$port,route = _ref5.route,render = _ref5.render,apiConfig = _ref5.apiConfig;var engine, mdb;return _regenerator2.default.wrap(function _callee6$(_context6) {while (1) {switch (_context6.prev = _context6.next) {case 0:
            (0, _config.setConfig)(apiConfig);if (!(

            _config2.default.engine === 'tingodb')) {_context6.next = 7;break;}
            apiServer.use((0, _tingodb4.default)());

            engine = (0, _tingodb2.default)({});

            getDb = function () {var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {return _regenerator2.default.wrap(function _callee4$(_context4) {while (1) {switch (_context4.prev = _context4.next) {case 0:return _context4.abrupt('return', new _promise2.default(function (resolve) {
                          resolve(new engine.Db(_config2.default.tingo.qenya, {}));
                        }));case 1:case 'end':return _context4.stop();}}}, _callee4, _this2);}));return function getDb() {return _ref6.apply(this, arguments);};}();_context6.next = 12;break;case 7:_context6.next = 9;return (

              (0, _mongodb3.default)());case 9:mdb = _context6.sent;
            apiServer.use(mdb);
            getDb = function () {var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5() {var md;return _regenerator2.default.wrap(function _callee5$(_context5) {while (1) {switch (_context5.prev = _context5.next) {case 0:_context5.next = 2;return (
                          _mongodb.MongoClient.connect(_config2.default.mongo.qenya));case 2:md = _context5.sent;return _context5.abrupt('return',
                        md);case 4:case 'end':return _context5.stop();}}}, _callee5, _this2);}));return function getDb() {return _ref7.apply(this, arguments);};}();case 12:



            if (route) presetRoute = route;
            handleResult = render;_context6.next = 16;return (

              bindRouter());case 16:

            apiServer.use(router.routes());

            apiServer.listen(port, function () {
              running = true;
              console.log('api server running on http://localhost:' + port + '.');
            });case 18:case 'end':return _context6.stop();}}}, _callee6, this);}));return function start(_x4) {return _ref4.apply(this, arguments);};}();var reset = function () {var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(


  function _callee7() {return _regenerator2.default.wrap(function _callee7$(_context7) {while (1) {switch (_context7.prev = _context7.next) {case 0:if (
            running) {_context7.next = 2;break;}return _context7.abrupt('return');case 2:

            router.stack = [];_context7.next = 5;return (
              bindRouter());case 5:case 'end':return _context7.stop();}}}, _callee7, this);}));return function reset() {return _ref8.apply(this, arguments);};}();var _koa = require('koa');var _koa2 = _interopRequireDefault(_koa);var _koa2Cors = require('koa2-cors');var _koa2Cors2 = _interopRequireDefault(_koa2Cors);var _koaRouter = require('koa-router');var _koaRouter2 = _interopRequireDefault(_koaRouter);var _koaBodyparser = require('koa-bodyparser');var _koaBodyparser2 = _interopRequireDefault(_koaBodyparser);var _tingodb = require('tingodb');var _tingodb2 = _interopRequireDefault(_tingodb);var _graphql = require('graphql');var _swig = require('swig');var _swig2 = _interopRequireDefault(_swig);var _mongodb = require('mongodb');var _config = require('./config');var _config2 = _interopRequireDefault(_config);var _graphql2 = require('./graphql');var _graphql3 = _interopRequireDefault(_graphql2);var _schemas = require('./models/schemas');var _tingodb3 = require('./middlewares/tingodb');var _tingodb4 = _interopRequireDefault(_tingodb3);var _mongodb2 = require('./middlewares/mongodb');var _mongodb3 = _interopRequireDefault(_mongodb2);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}var apiServer = new _koa2.default();var router = new _koaRouter2.default();apiServer.use((0, _koa2Cors2.default)());var getDb = void 0;var running = false;var presetRoute = function presetRoute() {};var handleResult = void 0;exports.default =


{
  start: start,
  reset: reset };
//# sourceMappingURL=api.js.map