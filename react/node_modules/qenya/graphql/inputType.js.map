{"version":3,"sources":["../../server/graphql/inputType.js"],"names":["schema","schemas","db","name","code","typeDict","fields","forEach","f","type","gt","description","desc","clearInputType"],"mappings":";;;;;;;AAOe,UAAUA,MAAV,EAAkBC,OAAlB,EAA2BC,EAA3B,EAA+B;AAC5C,MAAMC,OAAUH,OAAOI,IAAjB,UAAN;AACA,MAAIC,SAASF,IAAT,CAAJ,EAAoB,OAAOE,SAASF,IAAT,CAAP;;AAEpB,MAAMG,SAAS,EAAf;;AAEAN,SAAOM,MAAP,CAAcC,OAAd,CAAsB,UAACC,CAAD,EAAO;AAC3BF,WAAOE,EAAEL,IAAT,IAAiB,EAAEM,MAAM,uBAAYD,EAAEC,IAAd,CAAR,EAAjB;AACD,GAFD;;AAIA,MAAMC,KAAK,oCAA2B;AACpCP,cADoC;AAEpCG,kBAFoC;AAGpCK,iBAAaX,OAAOY,IAHgB,EAA3B,CAAX;;;AAMAP,WAASF,IAAT,IAAiBO,EAAjB;AACA,SAAOA,EAAP;AACD,C;;AAEeG,c,GAAAA,c,CA3BhB,kCAGA,8BAEA,IAAIR,WAAW,EAAf,CAsBO,SAASQ,cAAT,GAA0B;AAC/BR,aAAW,EAAX;AACD","file":"inputType.js","sourcesContent":["import {\n  GraphQLInputObjectType,\n} from 'graphql'\nimport { convertType } from './type'\n\nlet typeDict = {}\n\nexport default function (schema, schemas, db) {\n  const name = `${schema.code}Input`\n  if (typeDict[name]) return typeDict[name]\n\n  const fields = {}\n\n  schema.fields.forEach((f) => {\n    fields[f.name] = { type: convertType(f.type) }\n  })\n\n  const gt = new GraphQLInputObjectType({\n    name,\n    fields,\n    description: schema.desc,\n  })\n\n  typeDict[name] = gt\n  return gt\n}\n\nexport function clearInputType() {\n  typeDict = {}\n}\n"]}