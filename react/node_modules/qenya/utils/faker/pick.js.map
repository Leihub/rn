{"version":3,"sources":["../../../server/utils/faker/pick.js"],"names":["pickNumber","pickInteger","random","pickDate","one","pickText","Datetime","max","min","fixed","parseInt","num","Math","parseFloat","toFixed","round","ceil","field","date","Date","now","format","type","items","floor","length","buffer","push","join"],"mappings":";;AAEgBA,U,GAAAA,U;;;;;;;;AAQAC,W,GAAAA,W;;;;AAIAC,M,GAAAA,M;;;;AAIAC,Q,GAAAA,Q;;;;;AAKAC,G,GAAAA,G;;;;AAIAC,Q,GAAAA,Q,CA3BhB,uC,IAAYC,Q,sSAEL,SAASN,UAAT,GAAqD,KAAjCO,GAAiC,uEAA3B,KAA2B,KAApBC,GAAoB,uEAAd,CAAc,KAAXC,KAAW,uEAAH,CAAG,CAC1D,IAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6BA,MAAMG,SAASH,GAAT,EAAc,EAAd,CAAN,CAC7B,IAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6BA,MAAME,SAASF,GAAT,EAAc,EAAd,CAAN,CAE7B,IAAMG,MAAOC,KAAKV,MAAL,MAAiBK,MAAMC,GAAvB,CAAD,GAAgCA,GAA5C,CACA,OAAOK,WAAWF,IAAIG,OAAJ,CAAYL,KAAZ,CAAX,EAA+B,CAA/B,CAAP,CACD,CAEM,SAASR,WAAT,GAA8B,CACnC,OAAOW,KAAKG,KAAL,CAAWf,sCAAX,CAAP,CACD,CAEM,SAASE,MAAT,CAAgBK,GAAhB,EAAqB,CAC1B,OAAOK,KAAKI,IAAL,CAAUJ,KAAKV,MAAL,KAAgBK,GAA1B,CAAP,CACD,CAEM,SAASJ,QAAT,CAAkBc,KAAlB,EAAyB,CAC9B,IAAMC,OAAOC,KAAKC,GAAL,KAAalB,OAAO,WAAP,CAA1B,CACA,OAAOI,SAASe,MAAT,CAAgBH,IAAhB,EAAsBD,MAAMK,IAAN,KAAe,MAAf,GAAwB,YAAxB,GAAuC,qBAA7D,CAAP,CACD,CAEM,SAASlB,GAAT,CAAamB,KAAb,EAAoB,CACzB,OAAOA,MAAMX,KAAKY,KAAL,CAAWZ,KAAKV,MAAL,KAAgBqB,MAAME,MAAjC,CAAN,CAAP,CACD,CAEM,SAASpB,QAAT,CAAkBkB,KAAlB,EAAuC,KAAdhB,GAAc,uEAAR,CAAQ,KAALC,GAAK;AAC5C,MAAIiB,SAASlB,GAAb;AACA,MAAIC,GAAJ,EAAS;AACPiB,aAASxB,YAAYM,GAAZ,EAAiBC,GAAjB,CAAT;AACD;;AAED,MAAMkB,SAAS,EAAf;AACA,SAAOD,QAAP,EAAiB;AACfC,WAAOC,IAAP,CAAYvB,IAAImB,KAAJ,CAAZ;AACD;;AAED,SAAOhB,QAAQ,CAAR,GAAYmB,OAAO,CAAP,CAAZ,GAAwBA,OAAOE,IAAP,CAAY,EAAZ,CAA/B;AACD","file":"pick.js","sourcesContent":["import * as Datetime from '../datetime'\n\nexport function pickNumber(max = 65555, min = 0, fixed = 2) {\n  if (typeof max === 'string') max = parseInt(max, 10)\n  if (typeof min === 'string') min = parseInt(min, 10)\n\n  const num = (Math.random() * (max - min)) + min\n  return parseFloat(num.toFixed(fixed), 0)\n}\n\nexport function pickInteger(...args) {\n  return Math.round(pickNumber(...args))\n}\n\nexport function random(max) {\n  return Math.ceil(Math.random() * max)\n}\n\nexport function pickDate(field) {\n  const date = Date.now() - random(10000000000)\n  return Datetime.format(date, field.type === 'date' ? 'yyyy-MM-dd' : 'yyyy-MM-dd hh:mm:ss')\n}\n\nexport function one(items) {\n  return items[Math.floor(Math.random() * items.length)]\n}\n\nexport function pickText(items, max = 1, min) {\n  let length = max\n  if (min) {\n    length = pickInteger(max, min)\n  }\n\n  const buffer = []\n  while (length--) {\n    buffer.push(one(items))\n  }\n\n  return max === 1 ? buffer[0] : buffer.join('')\n}\n"]}