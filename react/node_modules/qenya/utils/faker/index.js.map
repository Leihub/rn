{"version":3,"sources":["../../../server/utils/faker/index.js"],"names":["fields","db","getList","resolve","data","i","length","f","res","type","max","min","fixed","defaultValue","name"],"mappings":"gZAAA;AACA;AACA,8B;;AAEe,oBAAgBA,MAAhB,EAAwBC,EAAxB,EAA4BC,OAA5B;AACN,sHAAY,iBAAOC,OAAP;AACXC,4BADW,GACJ,EADI;AAERC,yBAFQ,GAEJ,CAFI,cAEDA,IAAIL,OAAOM,MAFV;AAGTC,yBAHS,GAGLP,OAAOK,CAAP,CAHK;AAIXG,2BAJW,GAIL,EAJK;AAKPD,0BAAEE,IALK;AAMR,kCANQ;;;AASR,8BATQ;;;AAYR,iCAZQ;;;AAeR,gCAfQ;;;AAkBR,8BAlBQ;;;AAqBR,8BArBQ;;;AAwBR,8BAxBQ;AAyBR,kCAzBQ,wBAOXD,MAAM,8CAAsB,4CAA5B,CAPW,4CAUXA,MAAM,oBAAS,CAAC,IAAD,EAAO,KAAP,CAAT,CAAN,CAVW,4CAaXA,MAAM,uBAAYD,EAAEG,GAAd,EAAmBH,EAAEI,GAArB,CAAN,CAbW,4CAgBXH,MAAM,sBAAWD,EAAEG,GAAb,EAAkBH,EAAEI,GAApB,EAAyBJ,EAAEK,KAA3B,CAAN,CAhBW,sEAmBC,oBAASL,CAAT,EAAYN,EAAZ,EAAgBC,OAAhB,CAnBD,SAmBXM,GAnBW,6DAsBXA,MAAMD,EAAEM,YAAF,IAAkB,EAAxB,CAtBW;AA0BXL,8BAAM,oBAASD,CAAT,CAAN,CA1BW;;;AA6BXC,8BAAM,wCAAgBD,EAAEG,GAAF,IAAS,EAAzB,EAA6BH,EAAEI,GAAF,IAAS,CAAtC,CAAN,CA7BW;;AA+BfP,6BAAKG,EAAEO,IAAP,IAAeN,GAAf,CA/Be,QAEkBH,GAFlB;;;AAkCjBF,gCAAQC,IAAR,EAlCiB,gEAAZ,oEADM,kE","file":"index.js","sourcesContent":["import { FIRST_NAME, LAST_NAME, LOREM } from './definitions'\nimport { pickText, pickInteger, pickNumber, pickDate } from './pick'\nimport { pickEnum } from './enum'\n\nexport default async function (fields, db, getList) {\n  return new Promise(async (resolve) => {\n    const data = {}\n    for (let i = 0; i < fields.length; i++) {\n      const f = fields[i]\n      let res = ''\n      switch (f.type) {\n        case 'username':\n          res = pickText(LAST_NAME) + pickText(FIRST_NAME)\n          break\n        case 'bool':\n          res = pickText([true, false])\n          break\n        case 'integer':\n          res = pickInteger(f.max, f.min)\n          break\n        case 'number':\n          res = pickNumber(f.max, f.min, f.fixed)\n          break\n        case 'enum':\n          res = await pickEnum(f, db, getList)\n          break\n        case 'json':\n          res = f.defaultValue || {}\n          break\n        case 'date':\n        case 'datetime':\n          res = pickDate(f)\n          break\n        default:\n          res = pickText(LOREM, f.max || 20, f.min || 1)\n      }\n      data[f.name] = res\n    }\n\n    resolve(data)\n  })\n}\n"]}